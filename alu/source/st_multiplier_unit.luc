module st_multiplier_unit (
    input a[16],
    input b[16],
    output mul[16]
  )

{
full_adder fa[120];
var i, j;
var current_row_fa_index;
var previous_row_fa_index;

  //row 0 + row 1 
  //1b output
always {
  mul[0] = a[0] & b[0];
  for (i=0; i<15; i++) { //i to index fa
    fa.x[i] = a[i] & b[1];
    fa.y[i] = a[i+1] & b[0];
    if (i==0) {
      fa.cin[i] = b0;
    }
    else {
      fa.cin[i] = fa.cout[i-1];
    }
  }  
  
    //1b output
    mul[1] = fa.s[0];
    previous_row_fa_index = 0; //start from 0
    current_row_fa_index = 15; //start from 31

    for (i=2; i<16; i++){ //i for row, start from row 2
      for (j=0; j<15-i; j++){ //j for col
        fa.x[current_row_fa_index + j] = a[j] & b[i];
        fa.y[current_row_fa_index + j] = fa.s[previous_row_fa_index + j + 1];
        if (j==0) {
          fa.cin[current_row_fa_index + j] = b0;
        }
        else {
          fa.cin[current_row_fa_index + j] = fa.cout[current_row_fa_index + j -1];
        }
        
      }
      previous_row_fa_index = current_row_fa_index;
      current_row_fa_index = current_row_fa_index + j;
      //1b output
      mul[i] = fa.s[previous_row_fa_index];
      
    }
  
}